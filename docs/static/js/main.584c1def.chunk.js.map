{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAiBhD,OACE,sBAAMC,SAZa,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAjBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAkB1C,OAZAC,qBAAW,WACTxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGnB,CAAEpB,IAIEqB,EDfwBK,CAAc1B,GAAlCa,EAF4B,EAEjCN,KAAaa,EAFoB,EAEpBA,QAInB,OACE,qCACE,oBAAIJ,UAAU,uCAAd,SAAuDhB,IAErDoB,GAAW,mBAAGJ,UAAU,oCAAb,qBAGb,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEdfgB,EAAe,WAAM,MAGazC,mBAAW,CAAE,cAH1B,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAYvB,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADJA,YAc9B2B,EAAaE,aAAe,GAIbF,Q,MC1CfG,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.584c1def.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n  const [inputValue, setInputValue] = useState(''); // '' string vacio\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if( inputValue.trim().length > 2){\r\n        setCategories( cats => [inputValue, ...cats ] );\r\n        setInputValue('');\r\n      }\r\n      \r\n    //   console.log('submit hecho');\r\n      \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit } >\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired //func\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=2&api_key=xhELKQIXyJI1wqGUh3atBiAamuMKgJ2n`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    //console.log(gifs);\r\n    return gifs;\r\n  };\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    // console.log( {id,title,url} );\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\nconst { data:images, loading } = useFetchGifs( category  );\r\n//console.log(state);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\" animate__animated animate__bounceIn\" >{category}</h3>\r\n      {/* // si es true muestra cargando */}\r\n      { loading && <p className=\" animate__animated animate__flash\"\r\n      >Loading</p>} \r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem\r\n            key={img.id}\r\n            {...img} // envia como propiedades independientes\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs( category )\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            })\r\n        })\r\n  }, [ category  ])\r\n\r\n \r\n\r\n  return state; // { data: []  , loading: true}\r\n};\r\n\r\n","\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = [ 'One Punch', 'Samurai X', 'Dragol Ball']\r\n    const [categories, setCategories] = useState(  [ 'One Punch'] )\r\n    // const handleAdd = ( ) => {\r\n    //     // setCategories( [...categories, 'HunterxHunter'] );\r\n    //     // cats estado anterior, [ ...cats, 'HunterXHunter'], nuevo estado\r\n    //     setCategories( cats => [ ...cats, 'HunterXHunter'] );\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <> \r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nGifExpertApp.defaultProps = {\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}